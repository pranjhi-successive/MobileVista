{"ast":null,"code":"var _jsxFileName = \"/home/pranjhi.singh/Desktop/MobileVista/mobile-app/src/modules/mobiles/Uploads/bulk.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { message } from \"antd\";\n// import { InboxOutlined } from \"@ant-design/icons\";\nimport \"./bulk.css\";\nimport BulkUploadList from \"./history\";\nimport { Dragger } from \"../../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bulk = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [fetchHistory, setFetchHistory] = useState(true);\n  const handleUpload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:4000/up/bulk-upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        message.success(`${file.name} uploaded successfully`);\n      } else {\n        message.error(`${file.name} upload failed.`);\n      }\n    } catch (error) {\n      message.error(\"File upload failed.\");\n    }\n  };\n  const handleRemove = file => {\n    const newFileList = fileList.filter(item => item.uid !== file.uid);\n    setFileList(newFileList);\n  };\n  const props = {\n    customRequest: ({\n      onSuccess,\n      onError,\n      file\n    }) => {\n      handleUpload(file).then(() => onSuccess()).catch(error => {\n        console.error(\"Error uploading file:\", error);\n        onError(error);\n      });\n    },\n    onChange(info) {\n      setFetchHistory(true);\n      setFileList(info.fileList);\n    },\n    onRemove(file) {\n      handleRemove(file);\n    },\n    accept: \".csv\",\n    listType: \"picture\",\n    progress: {\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\"\n      },\n      format: percent => percent && `${parseFloat(percent.toFixed(1))}%`,\n      style: {\n        width: \"97%\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"0 24px\",\n      minHeight: 880\n    },\n    children: [/*#__PURE__*/_jsxDEV(Dragger, {\n      \"data-testid\": \"file-input\",\n      ...props,\n      fileList: fileList,\n      showUploadList: {\n        showPreviewIcon: true,\n        showRemoveIcon: true\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dragger-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Click or drag file to this area to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BulkUploadList, {\n        fetchHistory: fetchHistory,\n        setFetchHistory: setFetchHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Bulk, \"0NNd0SVHEBi21qtVG3CZzxINb/M=\");\n_c = Bulk;\nexport default Bulk;\nvar _c;\n$RefreshReg$(_c, \"Bulk\");","map":{"version":3,"names":["React","useState","message","BulkUploadList","Dragger","jsxDEV","_jsxDEV","Bulk","_s","fileList","setFileList","fetchHistory","setFetchHistory","handleUpload","file","formData","FormData","append","response","fetch","method","body","ok","success","name","error","handleRemove","newFileList","filter","item","uid","props","customRequest","onSuccess","onError","then","catch","console","onChange","info","onRemove","accept","listType","progress","strokeColor","format","percent","parseFloat","toFixed","style","width","padding","minHeight","children","showUploadList","showPreviewIcon","showRemoveIcon","className","InboxOutlined","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pranjhi.singh/Desktop/MobileVista/mobile-app/src/modules/mobiles/Uploads/bulk.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { message } from \"antd\";\n// import { InboxOutlined } from \"@ant-design/icons\";\nimport \"./bulk.css\";\nimport BulkUploadList from \"./history\";\nimport { Dragger } from \"../../../components\";\nconst Bulk = () => {\n  const [fileList, setFileList] = useState([]);\n  const [fetchHistory, setFetchHistory] = useState(true);\n\n  const handleUpload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:4000/up/bulk-upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (response.ok) {\n        message.success(`${file.name} uploaded successfully`);\n      } else {\n        message.error(`${file.name} upload failed.`);\n      }\n    } catch (error) {\n      message.error(\"File upload failed.\");\n    }\n  };\n\n  const handleRemove = (file) => {\n    const newFileList = fileList.filter((item) => item.uid !== file.uid);\n    setFileList(newFileList);\n  };\n\n  const props = {\n    customRequest: ({ onSuccess, onError, file }) => {\n      handleUpload(file)\n        .then(() => onSuccess())\n        .catch((error) => {\n          console.error(\"Error uploading file:\", error);\n          onError(error);\n        });\n    },\n    onChange(info) {\n      setFetchHistory(true);\n      setFileList(info.fileList);\n    },\n    onRemove(file) {\n      handleRemove(file);\n    },\n    accept: \".csv\",\n    listType: \"picture\",\n    progress: {\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\",\n      },\n      format: (percent) => percent && `${parseFloat(percent.toFixed(1))}%`,\n      style: { width: \"97%\" },\n    },\n  };\n\n  return (\n    <div \n    style={{ padding: \"0 24px\", minHeight: 880 }}>\n      <Dragger\n    data-testid=\"file-input\"\n        {...props}\n        fileList={fileList}\n        showUploadList={{ showPreviewIcon: true, showRemoveIcon: true }}\n      >\n        <div className=\"dragger-container\">\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">\n            Click or drag file to this area to upload\n          </p>\n        </div>\n      </Dragger>\n      <div>\n        <BulkUploadList fetchHistory={fetchHistory} setFetchHistory={setFetchHistory} />\n      </div>\n    </div>\n  );\n};\n\nexport default Bulk;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}