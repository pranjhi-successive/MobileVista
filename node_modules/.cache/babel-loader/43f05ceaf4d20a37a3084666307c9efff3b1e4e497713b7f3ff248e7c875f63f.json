{"ast":null,"code":"import{createContext,useMemo,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthenticationContext=/*#__PURE__*/createContext();const AuthWrapper=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[authData,setAuthData]=useState(\"\");const contextValue=useMemo(()=>({isAuthenticated,setIsAuthenticated,authData,setAuthData}),[isAuthenticated,authData]);return/*#__PURE__*/_jsx(AuthenticationContext.Provider,{value:contextValue,children:children});};export default AuthWrapper;","map":{"version":3,"names":["createContext","useMemo","useState","jsx","_jsx","AuthenticationContext","AuthWrapper","_ref","children","isAuthenticated","setIsAuthenticated","authData","setAuthData","contextValue","Provider","value"],"sources":["/home/pranjhi.singh/Desktop/MobileVista/mobile-app/src/modules/mobiles/User/Authentication/Context.jsx"],"sourcesContent":["import { createContext, useMemo, useState } from \"react\";\nexport const AuthenticationContext = createContext();\nconst AuthWrapper = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authData, setAuthData] = useState(\"\");\n  const contextValue = useMemo(\n    () => ({ isAuthenticated, setIsAuthenticated, authData, setAuthData }),\n    [isAuthenticated, authData]\n  );\n  return (\n    <AuthenticationContext.Provider value={contextValue}>\n      {children}\n    </AuthenticationContext.Provider>\n  );\n};\nexport default AuthWrapper;\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACzD,MAAO,MAAM,CAAAC,qBAAqB,cAAGL,aAAa,CAAC,CAAC,CACpD,KAAM,CAAAM,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAW,YAAY,CAAGZ,OAAO,CAC1B,KAAO,CAAEQ,eAAe,CAAEC,kBAAkB,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAC,CACtE,CAACH,eAAe,CAAEE,QAAQ,CAC5B,CAAC,CACD,mBACEP,IAAA,CAACC,qBAAqB,CAACS,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAL,QAAA,CACjDA,QAAQ,CACqB,CAAC,CAErC,CAAC,CACD,cAAe,CAAAF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}