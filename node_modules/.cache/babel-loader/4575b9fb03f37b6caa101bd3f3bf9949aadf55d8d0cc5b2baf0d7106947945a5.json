{"ast":null,"code":"import{useContext,useEffect,useState}from\"react\";import axios from\"axios\";import{Navigate}from\"react-router-dom\";import{AuthenticationContext}from\"../../modules/User/Authentication/Context\";import apiInstance from\"../../service/services\";import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{setIsAuthenticated,setAuthData}=useContext(AuthenticationContext);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const getUser=async()=>{try{const response=await apiInstance.get(\"/user/token\",{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});setIsAuthenticated(true);setAuthData({userId:response.data.data._id,email:response.data.data.email});}catch(error){console.log(error);localStorage.clear();setIsAuthenticated(false);}finally{setIsLoading(false);}};getUser();},[]);if(isLoading){return null;}if(localStorage.getItem(\"token\")){return children;}return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default ProtectedRoute;","map":{"version":3,"names":["useContext","useEffect","useState","axios","Navigate","AuthenticationContext","apiInstance","jsx","_jsx","ProtectedRoute","_ref","children","setIsAuthenticated","setAuthData","isLoading","setIsLoading","getUser","response","get","headers","Authorization","concat","localStorage","getItem","userId","data","_id","email","error","console","log","clear","to","replace"],"sources":["/home/pranjhi.singh/Desktop/MobileVista/mobile-app/src/Routes/authRoutes/protectedRoutes.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthenticationContext } from \"../../modules/User/Authentication/Context\";\nimport apiInstance from \"../../service/services\";\n\nconst ProtectedRoute = ({ children }) => {\n  const { setIsAuthenticated, setAuthData } = useContext(AuthenticationContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const response = await apiInstance.get(\"/user/token\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        });\n\n        setIsAuthenticated(true);\n        setAuthData({\n          userId: response.data.data._id,\n          email: response.data.data.email,\n        });\n      } catch (error) {\n        console.log(error);\n\n        localStorage.clear();\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getUser();\n  }, []);\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (localStorage.getItem(\"token\")) {\n    return children;\n  }\n\n  return <Navigate to=\"/login\" replace />;\n};\nexport default ProtectedRoute;\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,qBAAqB,KAAQ,2CAA2C,CACjF,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,kBAAkB,CAAEC,WAAY,CAAC,CAAGb,UAAU,CAACK,qBAAqB,CAAC,CAC7E,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAEhDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,WAAW,CAACY,GAAG,CAAC,aAAa,CAAE,CACpDC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxD,CACF,CAAC,CAAC,CAEFX,kBAAkB,CAAC,IAAI,CAAC,CACxBC,WAAW,CAAC,CACVW,MAAM,CAAEP,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAACC,GAAG,CAC9BC,KAAK,CAAEV,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAACE,KAC5B,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAElBN,YAAY,CAACS,KAAK,CAAC,CAAC,CACpBnB,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,OAAS,CACRG,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDC,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,SAAS,CAAE,CACb,MAAO,KAAI,CACb,CAEA,GAAIQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE,CACjC,MAAO,CAAAZ,QAAQ,CACjB,CAEA,mBAAOH,IAAA,CAACJ,QAAQ,EAAC4B,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAAC,CACD,cAAe,CAAAxB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}