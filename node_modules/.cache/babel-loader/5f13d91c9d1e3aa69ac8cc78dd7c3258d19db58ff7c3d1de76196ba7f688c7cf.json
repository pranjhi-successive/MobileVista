{"ast":null,"code":"import React,{useState}from\"react\";import{message}from\"antd\";import Dragger from\"antd/es/upload/Dragger\";import{InboxOutlined}from\"@ant-design/icons\";import\"./bulk.css\";import BulkUploadList from\"./history\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Bulk=()=>{const[fileList,setFileList]=useState([]);const[fetchHistory,setFetchHistory]=useState(true);const handleUpload=async file=>{try{const formData=new FormData();formData.append(\"file\",file);const response=await fetch(\"http://localhost:4000/up/bulk-upload\",{method:\"POST\",body:formData});if(response.ok){message.success(\"\".concat(file.name,\" uploaded successfully\"));}else{message.error(\"\".concat(file.name,\" upload failed.\"));}}catch(error){message.error(\"File upload failed.\");}};const handleRemove=file=>{const newFileList=fileList.filter(item=>item.uid!==file.uid);setFileList(newFileList);};const props={customRequest:_ref=>{let{onSuccess,onError,file}=_ref;handleUpload(file).then(()=>onSuccess()).catch(error=>{console.error(\"Error uploading file:\",error);onError(error);});},onChange(info){setFetchHistory(true);setFileList(info.fileList);},onRemove(file){handleRemove(file);},accept:\".csv\",listType:\"picture\",progress:{strokeColor:{\"0%\":\"#108ee9\",\"100%\":\"#87d068\"},format:percent=>percent&&\"\".concat(parseFloat(percent.toFixed(1)),\"%\"),style:{width:\"97%\"}}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"0 24px\",minHeight:880},children:[/*#__PURE__*/_jsx(Dragger,{\"data-testid\":\"file-input\",...props,fileList:fileList,showUploadList:{showPreviewIcon:true,showRemoveIcon:true},children:/*#__PURE__*/_jsxs(\"div\",{className:\"dragger-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"ant-upload-drag-icon\",children:/*#__PURE__*/_jsx(InboxOutlined,{})}),/*#__PURE__*/_jsx(\"p\",{className:\"ant-upload-text\",children:\"Click or drag file to this area to upload\"})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BulkUploadList,{fetchHistory:fetchHistory,setFetchHistory:setFetchHistory})})]});};export default Bulk;","map":{"version":3,"names":["React","useState","message","Dragger","InboxOutlined","BulkUploadList","jsx","_jsx","jsxs","_jsxs","Bulk","fileList","setFileList","fetchHistory","setFetchHistory","handleUpload","file","formData","FormData","append","response","fetch","method","body","ok","success","concat","name","error","handleRemove","newFileList","filter","item","uid","props","customRequest","_ref","onSuccess","onError","then","catch","console","onChange","info","onRemove","accept","listType","progress","strokeColor","format","percent","parseFloat","toFixed","style","width","padding","minHeight","children","showUploadList","showPreviewIcon","showRemoveIcon","className"],"sources":["/home/pranjhi.singh/Desktop/MobileVista/mobile-app/src/modules/mobiles/Uploads/bulk.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { message } from \"antd\";\nimport Dragger from \"antd/es/upload/Dragger\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport \"./bulk.css\";\nimport BulkUploadList from \"./history\";\nconst Bulk = () => {\n  const [fileList, setFileList] = useState([]);\n  const [fetchHistory, setFetchHistory] = useState(true);\n\n  const handleUpload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:4000/up/bulk-upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (response.ok) {\n        message.success(`${file.name} uploaded successfully`);\n      } else {\n        message.error(`${file.name} upload failed.`);\n      }\n    } catch (error) {\n      message.error(\"File upload failed.\");\n    }\n  };\n\n  const handleRemove = (file) => {\n    const newFileList = fileList.filter((item) => item.uid !== file.uid);\n    setFileList(newFileList);\n  };\n\n  const props = {\n    customRequest: ({ onSuccess, onError, file }) => {\n      handleUpload(file)\n        .then(() => onSuccess())\n        .catch((error) => {\n          console.error(\"Error uploading file:\", error);\n          onError(error);\n        });\n    },\n    onChange(info) {\n      setFetchHistory(true);\n      setFileList(info.fileList);\n    },\n    onRemove(file) {\n      handleRemove(file);\n    },\n    accept: \".csv\",\n    listType: \"picture\",\n    progress: {\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\",\n      },\n      format: (percent) => percent && `${parseFloat(percent.toFixed(1))}%`,\n      style: { width: \"97%\" },\n    },\n  };\n\n  return (\n    <div \n    style={{ padding: \"0 24px\", minHeight: 880 }}>\n      <Dragger\n    data-testid=\"file-input\"\n        {...props}\n        fileList={fileList}\n        showUploadList={{ showPreviewIcon: true, showRemoveIcon: true }}\n      >\n        <div className=\"dragger-container\">\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">\n            Click or drag file to this area to upload\n          </p>\n        </div>\n      </Dragger>\n      <div>\n        <BulkUploadList fetchHistory={fetchHistory} setFetchHistory={setFetchHistory} />\n      </div>\n    </div>\n  );\n};\n\nexport default Bulk;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}