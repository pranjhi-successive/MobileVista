{"version":3,"file":"static/js/484.f0db41d5.chunk.js","mappings":"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","sources":["modules/mobiles/Uploads/Create.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Form, message } from \"antd\";\nimport {\n  Button,\n  Checkbox,\n  DatePicker,\n  FormItem,\n  Input,\n  InputNumber,\n  Select,\n  Space,\n} from \"../../../components\";\nimport apiInstance from \"../../../service/services\";\n\nconst MobileForm = (props) => {\n  const { mobile, submitMessage, formHeading, url, method, message1 } = props;\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  console.log(mobile);\n\n  useEffect(() => {\n    form.setFieldsValue(mobile);\n  }, [form, mobile]);\n\n  const handleSubmit = async (values) => {\n    const options = {\n      url,\n      data: values,\n      method,\n    };\n    try {\n      setLoading(true);\n      const response = await apiInstance.request(options);\n      console.log(\"Response:\", response.data);\n      message.success(message1);\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error creating mobile:\", error);\n      message.error(\"Failed to create mobile\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const containerStyle = {\n    padding: \"20px\",\n    maxWidth: \"600px\",\n    margin: \"0 auto\",\n    background: isHovered ? \"#f0f0f0\" : \"#fff\",\n    transition: \"background 0.3s ease-in-out\",\n    borderRadius: \"5px\",\n    border: isHovered ? \"1px solid #aaa\" : \"1px solid #d9d9d9\",\n    boxShadow: isHovered\n      ? \"0 4px 8px rgba(0,0,0,0.2)\"\n      : \"0 2px 4px rgba(0,0,0,0.1)\",\n  };\n\n  const formStyle = {\n    border: \"1px solid #d9d9d9\",\n    borderRadius: \"5px\",\n    padding: \"20px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    textAlign: \"left\",\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n  return (\n    <div\n      style={containerStyle}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div>\n        <h2\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"2.5em\",\n            margin: \"20px 0\",\n            fontFamily: \"Arial, sans-serif\",\n            fontWeight: \"bold\",\n            textTransform: \"uppercase\",\n            letterSpacing: \"1px\",\n            textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.1)\",\n          }}\n        >\n          {formHeading}\n        </h2>\n        <Form\n          aria-label=\"create\"\n          form={form}\n          onFinish={handleSubmit}\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          style={formStyle}\n          scrollToFirstError\n        >\n          <FormItem\n            label=\"Brand\"\n            name=\"brand\"\n            rules={[{ required: true, message: \"Please enter the brand!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Model Number\"\n            name=\"modelNumber\"\n            rules={[\n              { required: true, message: \"Please enter the model number!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Price\"\n            name=\"price\"\n            rules={[\n              {\n                required: true,\n                type: \"number\",\n                message: \"Please enter the price!\",\n              },\n            ]}\n          >\n            <InputNumber style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Color\"\n            name=\"color\"\n            rules={[{ required: true, message: \"Please enter the color!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem label=\"Specifications\" wrapperCol={{ span: 16 }}>\n            <Space direction=\"vertical\">\n              <FormItem\n                name={[\"specifications\", \"display\"]}\n                label=\"Display\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the display specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"camera\"]}\n                label=\"Camera\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the camera specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"processor\"]}\n                label=\"Processor\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the processor specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"storage\"]}\n                label=\"Storage\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the storage specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem\n            label=\"Release Date\"\n            name=\"releaseDate\"\n            rules={[\n              { required: true, message: \"Please select the release date!\" },\n            ]}\n          >\n            <DatePicker style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Battery Capacity\"\n            name=\"batteryCapacity\"\n            rules={[\n              { required: true, message: \"Please enter the battery capacity!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem label=\"Connectivity\" wrapperCol={{ span: 16 }}>\n            <Space>\n              <FormItem\n                name={[\"connectivity\", \"wifi\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Wi-Fi</Checkbox>\n              </FormItem>\n              <FormItem\n                name={[\"connectivity\", \"bluetooth\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Bluetooth</Checkbox>\n              </FormItem>\n              <FormItem\n                name={[\"connectivity\", \"cellular\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Cellular</Checkbox>\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem label=\"Weight\" name=\"weight\">\n            <InputNumber style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Operating System\"\n            name=\"operatingSystem\"\n            rules={[\n              { required: true, message: \"Please enter the operating system!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Is Water Resistant\"\n            name=\"isWaterResistant\"\n            valuePropName=\"checked\"\n          >\n            <Checkbox />\n          </FormItem>\n\n          <FormItem\n            placeholder=\"Enter additional features\"\n            label=\"Additional Features\"\n            name=\"additionalFeatures\"\n          >\n            <Select\n              mode=\"tags\"\n              style={{ width: \"100%\" }}\n              placeholder=\"Enter additional features\"\n            />\n          </FormItem>\n\n          <FormItem\n            label=\"Accessories\"\n            placeholder=\"Accessory Name\"\n            name=\"accessories\"\n          >\n            <Form.List name=\"accessories\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <Space\n                      key={key}\n                      style={{ display: \"flex\", marginBottom: 8 }}\n                      align=\"baseline\"\n                    >\n                      <FormItem\n                        {...restField}\n                        name={[name, \"name\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please enter the accessory name!\",\n                          },\n                        ]}\n                      >\n                        <Input placeholder=\"Accessory Name\" />\n                      </FormItem>\n                      <FormItem {...restField} name={[name, \"type\"]}>\n                        <Input placeholder=\"Accessory Type\" />\n                      </FormItem>\n                      <FormItem\n                        {...restField}\n                        name={[name, \"price\"]}\n                        rules={[\n                          {\n                            type: \"number\",\n                            message: \"Please enter a valid price!\",\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          label=\"Accessory Price\"\n                          style={{ width: \"100%\" }}\n                        />\n                      </FormItem>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => remove(name)}\n                        style={{ marginLeft: \"8px\" }}\n                      >\n                        Remove\n                      </Button>\n                    </Space>\n                  ))}\n                  <FormItem>\n                    <Button type=\"dashed\" onClick={() => add()} block>\n                      Add Accessory\n                    </Button>\n                  </FormItem>\n                </>\n              )}\n            </Form.List>\n          </FormItem>\n\n          <FormItem label=\"Warranty\" wrapperCol={{ span: 16 }}>\n            <Space>\n              <FormItem name={[\"warranty\", \"validUntil\"]} label=\"Valid Until\">\n                <DatePicker style={{ width: \"100%\" }} />\n              </FormItem>\n              <FormItem name={[\"warranty\", \"type\"]} label=\"Type\">\n                <Input />\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem\n            label=\"Image URL\"\n            name=\"image\"\n            rules={[{ required: true, message: \"Please enter the image URL!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem {...tailFormItemLayout}>\n            <Button\n              type=\"primary\"\n              name=\"submit\"\n              htmlType=\"submit\"\n              loading={loading}\n            >\n              {submitMessage}\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileForm;\n"],"names":["props","mobile","submitMessage","formHeading","url","method","message1","form","Form","useForm","loading","setLoading","useState","isHovered","setIsHovered","console","log","useEffect","setFieldsValue","containerStyle","padding","maxWidth","margin","background","transition","borderRadius","border","boxShadow","_jsx","style","onMouseEnter","onMouseLeave","children","_jsxs","textAlign","color","fontSize","fontFamily","fontWeight","textTransform","letterSpacing","textShadow","onFinish","async","options","data","values","response","apiInstance","request","message","success","window","location","reload","error","labelCol","span","wrapperCol","scrollToFirstError","FormItem","label","name","rules","required","Input","type","InputNumber","width","Space","direction","DatePicker","valuePropName","Checkbox","placeholder","Select","mode","List","fields","_ref","add","remove","_Fragment","map","_ref2","key","restField","display","marginBottom","align","Button","onClick","marginLeft","block","xs","offset","sm","htmlType"],"sourceRoot":""}