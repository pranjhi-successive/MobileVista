{"version":3,"file":"static/js/5086.e4d69fc8.chunk.js","mappings":"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","sources":["modules/mobiles/Edit/Edit.jsx","modules/mobiles/Uploads/Create.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ErrorPage } from \"../../../components/Error\";\nimport MobileForm from \"../Uploads/Create\";\nimport apiInstance from \"../../../service/services\";\nimport { AuthenticationContext } from \"../../User/Authentication/Context\";\n\nconst Edit = () => {\n  const { id } = useParams();\n  console.log(\"id:\", id);\n\n  const [mobile, setMobile] = useState({});\n  const {authData } = useContext(AuthenticationContext);\n\n\n  console.log(process.env);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get(`http://localhost:4000/api/${id}`);\n        const response = await apiInstance.get(`/api/${id}`);\n        const mobileData = response.data.data;\n        delete mobileData.releaseDate;\n        delete mobileData.warranty.validUntil;\n        setMobile(mobileData);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchData();\n  }, [id]);\n  if (!mobile) {\n    return <ErrorPage />;\n  }\n  return (\n    <>\n      {/* <pre>{JSON.stringify(mobile, null, 2)}</pre> */}\n      <MobileForm\n        submitMessage=\"Update Mobile\"\n        formHeading=\"Edit Mobile Data\"\n        mobile={mobile}\n        method=\"PUT\"\n        url={`http://localhost:4000/api/mobile/${id}`}\n        message1=\"Mobile Updated Successfully\"\n        updatedBy={authData.userId}\n      />\n    </>\n  );\n};\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Form, message } from \"antd\";\nimport {\n  Button,\n  Checkbox,\n  DatePicker,\n  FormItem,\n  Input,\n  InputNumber,\n  Select,\n  Space,\n} from \"../../../components\";\nimport apiInstance from \"../../../service/services\";\n\nconst MobileForm = (props) => {\n  const { mobile, submitMessage, formHeading, url, method, message1 } = props;\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  console.log(mobile);\n\n  useEffect(() => {\n    form.setFieldsValue(mobile);\n  }, [form, mobile]);\n\n  const handleSubmit = async (values) => {\n    const options = {\n      url,\n      data: values,\n      method,\n    };\n    try {\n      setLoading(true);\n      const response = await apiInstance.request(options);\n      console.log(\"Response:\", response.data);\n      message.success(message1);\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error creating mobile:\", error);\n      message.error(\"Failed to create mobile\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const containerStyle = {\n    padding: \"20px\",\n    maxWidth: \"600px\",\n    margin: \"0 auto\",\n    background: isHovered ? \"#f0f0f0\" : \"#fff\",\n    transition: \"background 0.3s ease-in-out\",\n    borderRadius: \"5px\",\n    border: isHovered ? \"1px solid #aaa\" : \"1px solid #d9d9d9\",\n    boxShadow: isHovered\n      ? \"0 4px 8px rgba(0,0,0,0.2)\"\n      : \"0 2px 4px rgba(0,0,0,0.1)\",\n  };\n\n  const formStyle = {\n    border: \"1px solid #d9d9d9\",\n    borderRadius: \"5px\",\n    padding: \"20px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    textAlign: \"left\",\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n  return (\n    <div\n      style={containerStyle}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div>\n        <h2\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"2.5em\",\n            margin: \"20px 0\",\n            fontFamily: \"Arial, sans-serif\",\n            fontWeight: \"bold\",\n            textTransform: \"uppercase\",\n            letterSpacing: \"1px\",\n            textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.1)\",\n          }}\n        >\n          {formHeading}\n        </h2>\n        <Form\n          aria-label=\"create\"\n          form={form}\n          onFinish={handleSubmit}\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          style={formStyle}\n          scrollToFirstError\n        >\n          <FormItem\n            label=\"Brand\"\n            name=\"brand\"\n            rules={[{ required: true, message: \"Please enter the brand!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Model Number\"\n            name=\"modelNumber\"\n            rules={[\n              { required: true, message: \"Please enter the model number!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Price\"\n            name=\"price\"\n            rules={[\n              {\n                required: true,\n                type: \"number\",\n                message: \"Please enter the price!\",\n              },\n            ]}\n          >\n            <InputNumber style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Color\"\n            name=\"color\"\n            rules={[{ required: true, message: \"Please enter the color!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem label=\"Specifications\" wrapperCol={{ span: 16 }}>\n            <Space direction=\"vertical\">\n              <FormItem\n                name={[\"specifications\", \"display\"]}\n                label=\"Display\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the display specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"camera\"]}\n                label=\"Camera\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the camera specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"processor\"]}\n                label=\"Processor\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the processor specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n              <FormItem\n                name={[\"specifications\", \"storage\"]}\n                label=\"Storage\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter the storage specification!\",\n                  },\n                ]}\n              >\n                <Input />\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem\n            label=\"Release Date\"\n            name=\"releaseDate\"\n            rules={[\n              { required: true, message: \"Please select the release date!\" },\n            ]}\n          >\n            <DatePicker style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Battery Capacity\"\n            name=\"batteryCapacity\"\n            rules={[\n              { required: true, message: \"Please enter the battery capacity!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem label=\"Connectivity\" wrapperCol={{ span: 16 }}>\n            <Space>\n              <FormItem\n                name={[\"connectivity\", \"wifi\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Wi-Fi</Checkbox>\n              </FormItem>\n              <FormItem\n                name={[\"connectivity\", \"bluetooth\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Bluetooth</Checkbox>\n              </FormItem>\n              <FormItem\n                name={[\"connectivity\", \"cellular\"]}\n                valuePropName=\"checked\"\n              >\n                <Checkbox>Cellular</Checkbox>\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem label=\"Weight\" name=\"weight\">\n            <InputNumber style={{ width: \"100%\" }} />\n          </FormItem>\n\n          <FormItem\n            label=\"Operating System\"\n            name=\"operatingSystem\"\n            rules={[\n              { required: true, message: \"Please enter the operating system!\" },\n            ]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem\n            label=\"Is Water Resistant\"\n            name=\"isWaterResistant\"\n            valuePropName=\"checked\"\n          >\n            <Checkbox />\n          </FormItem>\n\n          <FormItem\n            placeholder=\"Enter additional features\"\n            label=\"Additional Features\"\n            name=\"additionalFeatures\"\n          >\n            <Select\n              mode=\"tags\"\n              style={{ width: \"100%\" }}\n              placeholder=\"Enter additional features\"\n            />\n          </FormItem>\n\n          <FormItem\n            label=\"Accessories\"\n            placeholder=\"Accessory Name\"\n            name=\"accessories\"\n          >\n            <Form.List name=\"accessories\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <Space\n                      key={key}\n                      style={{ display: \"flex\", marginBottom: 8 }}\n                      align=\"baseline\"\n                    >\n                      <FormItem\n                        {...restField}\n                        name={[name, \"name\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please enter the accessory name!\",\n                          },\n                        ]}\n                      >\n                        <Input placeholder=\"Accessory Name\" />\n                      </FormItem>\n                      <FormItem {...restField} name={[name, \"type\"]}>\n                        <Input placeholder=\"Accessory Type\" />\n                      </FormItem>\n                      <FormItem\n                        {...restField}\n                        name={[name, \"price\"]}\n                        rules={[\n                          {\n                            type: \"number\",\n                            message: \"Please enter a valid price!\",\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          label=\"Accessory Price\"\n                          style={{ width: \"100%\" }}\n                        />\n                      </FormItem>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => remove(name)}\n                        style={{ marginLeft: \"8px\" }}\n                      >\n                        Remove\n                      </Button>\n                    </Space>\n                  ))}\n                  <FormItem>\n                    <Button type=\"dashed\" onClick={() => add()} block>\n                      Add Accessory\n                    </Button>\n                  </FormItem>\n                </>\n              )}\n            </Form.List>\n          </FormItem>\n\n          <FormItem label=\"Warranty\" wrapperCol={{ span: 16 }}>\n            <Space>\n              <FormItem name={[\"warranty\", \"validUntil\"]} label=\"Valid Until\">\n                <DatePicker style={{ width: \"100%\" }} />\n              </FormItem>\n              <FormItem name={[\"warranty\", \"type\"]} label=\"Type\">\n                <Input />\n              </FormItem>\n            </Space>\n          </FormItem>\n\n          <FormItem\n            label=\"Image URL\"\n            name=\"image\"\n            rules={[{ required: true, message: \"Please enter the image URL!\" }]}\n          >\n            <Input />\n          </FormItem>\n\n          <FormItem {...tailFormItemLayout}>\n            <Button\n              type=\"primary\"\n              name=\"submit\"\n              htmlType=\"submit\"\n              loading={loading}\n            >\n              {submitMessage}\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileForm;\n"],"names":["Edit","id","useParams","console","log","mobile","setMobile","useState","authData","useContext","AuthenticationContext","process","useEffect","async","mobileData","apiInstance","get","concat","data","releaseDate","warranty","validUntil","error","message","fetchData","_jsx","_Fragment","children","MobileForm","submitMessage","formHeading","method","url","message1","updatedBy","userId","ErrorPage","props","form","Form","useForm","loading","setLoading","isHovered","setIsHovered","setFieldsValue","containerStyle","padding","maxWidth","margin","background","transition","borderRadius","border","boxShadow","style","onMouseEnter","onMouseLeave","_jsxs","textAlign","color","fontSize","fontFamily","fontWeight","textTransform","letterSpacing","textShadow","onFinish","options","values","response","request","success","window","location","reload","labelCol","span","wrapperCol","scrollToFirstError","FormItem","label","name","rules","required","Input","type","InputNumber","width","Space","direction","DatePicker","valuePropName","Checkbox","placeholder","Select","mode","List","fields","_ref","add","remove","map","_ref2","key","restField","display","marginBottom","align","Button","onClick","marginLeft","block","xs","offset","sm","htmlType"],"sourceRoot":""}